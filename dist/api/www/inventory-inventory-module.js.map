{"version":3,"sources":["./src/app/main/inventory/inventory.page.css","./src/app/main/inventory/inventory.page.html","./src/app/main/inventory/inventory.module.ts","./src/app/main/inventory/inventory.page.ts","./src/app/main/inventory/inventory-routing.module.ts"],"names":[],"mappings":"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","file":"inventory-inventory-module.js","sourcesContent":["export default \".add-icon{\\n    background-color: black;    \\n    margin-left: -40px;\\n}\\n\\n.add-icon:hover{\\n    background-color: #222428;    \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludmVudG9yeS5wYWdlLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtJQUN2QixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0IiLCJmaWxlIjoiaW52ZW50b3J5LnBhZ2UuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFkZC1pY29ue1xuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOyAgICBcbiAgICBtYXJnaW4tbGVmdDogLTQwcHg7XG59XG5cbi5hZGQtaWNvbjpob3ZlcntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjIyNDI4OyAgICBcbn0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title class=\\\"ion-padding-top\\\">\\n      Inventory\\n      <ion-label *ngIf=\\\"groupName\\\"><small>({{groupName|titlecase}})</small></ion-label>\\n    </ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\" *ngIf=\\\"searchString === ''\\\">\\n      <ion-button (click)=\\\"presentCategoryFilterAlert()\\\" size=\\\"small\\\">\\n        <ion-icon name=\\\"filter-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-grid>\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-col size=\\\"12\\\" size-sm=\\\"10\\\" size-md=\\\"8\\\" size-lg=\\\"6\\\" size-xl=\\\"4\\\"\\n          class=\\\"ion-margin-start ion-margin-end ion-no-padding\\\">\\n          <ion-searchbar color=\\\"light\\\" showCancelButton=\\\"focus\\\" [(ngModel)]=\\\"searchString\\\" #searchStr\\n            (ionInput)=\\\"getProductList(searchStr.value)\\\">\\n          </ion-searchbar>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n    <ion-buttons slot=\\\"end\\\" *ngIf=\\\"searchString === ''\\\">\\n      <ion-button (click)=\\\"presentSortAlert()\\\" size=\\\"small\\\">\\n        <ion-icon name=\\\"funnel-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col size=\\\"12\\\" size-sm=\\\"10\\\" size-md=\\\"8\\\" class=\\\"ion-text-center\\\">\\n        <ion-toolbar size=\\\"12\\\" class=\\\"ion-text-center\\\" style=\\\"background-color: #1f1f1f;\\\">\\n          <ion-title *ngIf=\\\"(productError === '' && searchString === '') ||\\n          (filterError === '' && searchString !== ''); else errorCondition\\\">{{selectedCategory.name | titlecase}}\\n          </ion-title>\\n          <ng-template #errorCondition>\\n            <ion-title>Operation Failed</ion-title>\\n          </ng-template>\\n        </ion-toolbar>\\n\\n        <ion-list style=\\\"background-color: rgb(40, 41, 44);\\\" *ngIf=\\\"searchString === '' && products?.length > 0\\\">\\n          <ion-card *ngFor=\\\"let product of products\\\">\\n            <ion-card-header>\\n              <ion-card-title>\\n                {{product?.name | titlecase}}\\n              </ion-card-title>\\n              <ion-card-subtitle>\\n                {{product?.brand | titlecase}}\\n              </ion-card-subtitle>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <ion-item *ngIf=\\\"product?.size\\\">\\n                <ion-label>\\n                  Size: {{product?.size | titlecase}}\\n                </ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"product?.quantity\\\">\\n                <ion-label>\\n                  Quantity: {{product?.quantity}}\\n                </ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"product?.price\\\">\\n                <ion-label>Price: {{product?.price}}</ion-label>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label>Stock: {{product?.stockCount[currentGroup]}}</ion-label>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label>Status:\\n                  {{product?.stockStatus[currentGroup] === '' ? 'Empty': product?.stockStatus[currentGroup] | titlecase}}\\n                </ion-label>\\n              </ion-item>\\n            </ion-card-content>\\n            <ion-row class=\\\"ion-justify-content-center\\\">\\n              <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" (click)=\\\"presentInventoryActionSheet(product)\\\">\\n                <ion-icon name=\\\"ellipsis-horizontal\\\"></ion-icon>\\n              </ion-button>\\n            </ion-row>\\n          </ion-card>\\n        </ion-list>\\n\\n        <ion-list style=\\\"background-color: rgb(40, 41, 44);\\\" class=\\\"ion-padding\\\" *ngIf=\\\"searchString === ''\\\">\\n          <ion-text *ngIf=\\\"productError === '' && products?.length === 0\\\">{{searchStatus}}</ion-text>\\n          <ion-text *ngIf=\\\"productError !== ''\\\">{{productError}}</ion-text>\\n        </ion-list>\\n\\n        <ion-list style=\\\"background-color: rgb(40, 41, 44);\\\" *ngIf=\\\"searchString !== '' && filtered.length > 0\\\">\\n          <ion-card *ngFor=\\\"let product of filtered\\\">\\n            <ion-card-header>\\n              <ion-card-title>\\n                {{product?.name | titlecase}}\\n              </ion-card-title>\\n              <ion-card-subtitle>\\n                {{product?.brand | titlecase}}\\n              </ion-card-subtitle>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <ion-item *ngIf=\\\"product?.size\\\">Size: {{product?.size | titlecase}}</ion-item>\\n              <ion-item *ngIf=\\\"product?.quantity\\\">Quantity: {{product?.quantity}}</ion-item>\\n              <ion-item *ngIf=\\\"product?.price\\\">Price: {{product?.price}}</ion-item>\\n              <ion-item>Stock:\\n                <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" size=\\\"small\\\" (click)=\\\"updateProductStockCount(product, -1);\\\"\\n                  [disabled]=\\\"updateLock || product?.stockCount[currentGroup] === 0\\\">\\n                  <ion-icon name=\\\"caret-down-outline\\\"></ion-icon>\\n                </ion-button>\\n                <ion-text>{{product?.stockCount[currentGroup]}}</ion-text>\\n                <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" size=\\\"small\\\" (click)=\\\"updateProductStockCount(product, 1);\\\"\\n                  [disabled]=\\\"updateLock\\\">\\n                  <ion-icon name=\\\"caret-up-outline\\\"></ion-icon>\\n                </ion-button>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label>Status:</ion-label>\\n                <ion-select okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\"\\n                  [value]=\\\"product?.stockStatus[currentGroup] !== '' ? product?.stockStatus[currentGroup]: 'empty'\\\"\\n                  #stockStatus (ionChange)=\\\"updateProductStockStatus(product, stockStatus.value)\\\"\\n                  [disabled]=\\\"updateLock\\\">\\n                  <ion-select-option value=\\\"full\\\">Full</ion-select-option>\\n                  <ion-select-option value=\\\"half\\\">Half</ion-select-option>\\n                  <ion-select-option value=\\\"empty\\\" disabled>Empty</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\" *ngIf=\\\"showDoneButton\\\">\\n                <ion-col class=\\\"ion-text-center ion-padding-top\\\">\\n                  <ion-button fill=\\\"clear\\\" (click)=\\\"showDoneButton = false; searchString = ''\\\">Done</ion-button>\\n                </ion-col>\\n              </ion-item>\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-list>\\n        <ion-list style=\\\"background-color: rgb(40, 41, 44);\\\" class=\\\"ion-padding\\\" *ngIf=\\\"searchString !== ''\\\">\\n          <ion-text *ngIf=\\\"searchString !== '' && filterError === '' && filtered?.length === 0\\\">{{filterStatus}}\\n          </ion-text>\\n          <ion-text *ngIf=\\\"searchString !== '' && filterError !== ''\\\">{{filterError}}</ion-text>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\";","import {\n  CommonModule\n} from '@angular/common';\nimport {\n  NgModule\n} from '@angular/core';\nimport {\n  FormsModule\n} from '@angular/forms';\nimport {\n  IonicModule\n} from '@ionic/angular';\nimport {\n  InventoryPage\n} from './inventory.page';\n\nimport {\n  InventoryRoutingModule\n} from './inventory-routing.module';\n\n@NgModule({\n  declarations: [InventoryPage],\n  imports: [CommonModule, IonicModule, InventoryRoutingModule, FormsModule]\n})\nexport class InventoryModule {}\n","import {\n  Component\n} from '@angular/core';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  ActionSheetController,\n  AlertController,\n  PopoverController\n} from '@ionic/angular';\nimport {\n  take\n} from 'rxjs/operators';\n\n// components\nimport {\n  FilterProductsComponent\n} from '../cart/modals/filter-products/filter-products.component';\nimport {\n  SortProductsComponent\n} from '../cart/modals/sort-products/sort-products.component';\n\n// services\nimport {\n  CartService\n} from './../../services/cart.service';\nimport {\n  InventoryService\n} from './../../services/inventory.service';\nimport {\n  SettingsService\n} from './../../services/settings.service';\nimport {\n  SearchBarService,\n} from './../../services/searchbar.service';\nimport {\n  ToasterService\n} from './../../services/toaster.service';\n\n// models\nimport {\n  ProductModel\n} from './../../models/product.model';\nimport {\n  SettingsModel\n} from './../../models/settings.model';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: 'inventory.page.html',\n  styleUrls: ['inventory.page.css']\n})\nexport class InventoryPage {\n\n  allProducts: ProductModel[] = [];\n\n  // products array is used for rendering products with stockCount greater than zero\n  products: ProductModel[];\n\n  // filtered array is used for rendering products filtered from searchbar\n  filtered: ProductModel[] = [];\n\n  currentGroup: string;\n  groupName: string;\n\n  // stores filtered value for categories\n  // default is all products\n  selectedCategory: {\n    id: string\n    name: string,\n  } = {\n    id: '',\n    name: 'all products'\n  };\n\n  // sort filter\n  // sort by price or cart units\n  sortBy: string = 'none';\n\n  productError: string = '';\n  filterError: string = '';\n  searchString: string = '';\n  searchStatus: string = 'No Items Found';\n  filterStatus: string;\n  getProductsView: string;\n  showDoneButton: boolean = false;\n\n  // all buttons are disabled when the update lock is true\n  updateLock: boolean = false;\n\n  constructor(private searchBarService: SearchBarService,\n    private inventoryService: InventoryService,\n    private alertController: AlertController,\n    private actionSheetController: ActionSheetController,\n    private popoverController: PopoverController,\n    private settingsService: SettingsService,\n    private cartService: CartService,\n    private toasterService: ToasterService,\n    private router: Router) {}\n\n  ionViewDidEnter() {\n\n    this.searchStatus = 'Loading Inventory';\n\n    this.getProductsView = this.settingsService.settings.getProductsView;\n\n    // extracting the currentGroup name from the settings\n    try {\n      this.currentGroup = this.settingsService.settings.currentGroup;\n    } catch (error) {\n      this.currentGroup = '';\n    }\n\n    if (!this.currentGroup) {\n      this.presentAddGroupAlert();\n    }\n\n    let groups = [];\n\n    try {\n      groups = this.settingsService.settings.groups;\n    } catch (error) {\n      groups = [];\n    }\n\n    if (groups) {\n      groups.forEach(group => {\n        if (group[this.currentGroup]) {\n          this.groupName = group[this.currentGroup];\n          return;\n        }\n      });\n    }\n    if (!groups) {\n      this.groupName = '';\n    }\n\n    if (this.currentGroup) {\n      this.inventoryService.getInventory(this.getProductsView, this.selectedCategory.id).pipe(take(1)).subscribe((products: ProductModel[]) => {\n        // maintainig original copy of the data\n        // used to render products the searchbar is cleared\n        this.allProducts = products;\n        this.products = products;\n        if (this.products.length === 0) {\n          this.searchStatus = 'No Items Found';\n        }\n      }, (error: any) => {\n        this.productError = error;\n        this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n      });\n    }\n  }\n\n  ionViewDidLeave() {\n    this.filtered = [];\n    this.products = [];\n    this.selectedCategory = {\n      id: '',\n      name: 'All Products'\n    }\n    this.sortBy = 'none';\n    this.searchString = '';\n  }\n\n  getProductList(searchStr: string): void {\n    if (this.getProductsView === 'all') {\n      this.filterProducts(searchStr);\n    } else {\n      this.filtered = [];\n      // regex will remove special characters from the search string\n      searchStr = searchStr.replace(/[^a-zA-Z]/g, '');\n\n      this.searchString = searchStr;\n      if (searchStr !== '') {\n        this.filterStatus = 'Searching Products'\n        this.filtered = [];\n\n        this.searchBarService.getProductList(searchStr, this.selectedCategory.id).pipe(take(1)).subscribe((data: ProductModel[]) => {\n          this.filtered = data;\n          if (this.filtered.length === 0) {\n            this.filterStatus = 'No Items Found';\n          }\n        }, (error: string) => {\n          this.filterError = error;\n          this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n        });\n      }\n\n      if (searchStr !== '') {\n        this.showDoneButton = false;\n      }\n    }\n  }\n\n\n  updateProductStockCount(product: ProductModel, count: number): void {\n    if (this.currentGroup.length > 0) {\n      this.updateLock = true;\n      this.inventoryService.updateStockCount(product._id, count, this.currentGroup).pipe(take(1)).subscribe(\n        () => {\n          product.stockCount[this.currentGroup] += count;\n          this.updateProducts(product);\n          // neutralize sort filter\n          this.sortBy = 'none';\n          this.updateLock = false;\n          this.toasterService.presentToast('', 'Inventoy Updated', 500);\n        }, (error: string) => {\n          this.updateLock = false;\n          this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n        }\n      );\n\n      if (product.stockCount[this.currentGroup] + count > 0 && product.stockStatus[this.currentGroup] === 'empty' ||\n        product.stockCount[this.currentGroup] + count > 0 && !product.stockStatus[this.currentGroup]) {\n        this.inventoryService.updateStockStatus(product._id, 'full', this.currentGroup).pipe(take(1)).subscribe(\n          () => {\n            product.stockStatus[this.currentGroup] = 'full';\n            this.updateProducts(product);\n          }, (error: string) => {\n            this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n          }\n        );\n      }\n\n      if (product.stockCount[this.currentGroup] + count === 0) {\n        this.inventoryService.updateStockStatus(product._id, 'empty', this.currentGroup).pipe(take(1)).subscribe(\n          () => {\n            product.stockStatus[this.currentGroup] = 'empty';\n            this.updateProducts(product);\n          }, (error: string) => {\n            this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n          }\n        );\n      }\n    } else {\n      this.alertController.create({\n        header: 'No Group Selected',\n        message: 'Please go to settings and select a group.',\n        buttons: [{\n          text: 'Cancel',\n          role: 'cancel'\n        }, {\n          text: 'Ok',\n          handler: () => {\n            this.router.navigate(['/', 'app', 'settings', 'manage-app'])\n          }\n        }]\n      }).then((alertEl: HTMLIonAlertElement) => {\n        alertEl.present();\n      });\n    }\n  }\n\n  updateProductStockStatus(product: ProductModel, status: string): void {\n    if (this.currentGroup.length > 0) {\n      if (status === 'empty') {\n\n        this.alertController.create({\n          header: 'Out of stock?',\n          message: 'Do you want to add this product to cart?',\n          inputs: [{\n            type: 'number',\n            name: 'count',\n            placeholder: 'Number of products'\n          }],\n          buttons: [{\n            text: 'Cancel',\n            role: 'cancel',\n            handler: () => {\n              if (this.getProductsView === 'partial') {\n                this.products = this.products.filter(prod => {\n                  if (prod._id !== product._id) {\n                    return true;\n                  }\n                });\n              }\n            }\n          }, {\n            text: 'Okay',\n            handler: (data: {\n              count: string\n            }) => {\n              this.cartService.updateCartCount(product._id, +data.count, this.currentGroup).pipe(take(1)).subscribe(\n                () => {\n                  this.toasterService.presentToast('', 'Cart Updated', 500);\n                  this.inventoryService.updateStockStatus(product._id, status, this.currentGroup).pipe(take(1)).subscribe(\n                    () => {\n                      product.stockStatus[this.currentGroup] = status;\n                      if (product.stockStatus[this.currentGroup] !== 'empty') {\n                        this.updateProducts(product);\n                      }\n                    }\n                  );\n                }, (error: string) => {\n                  this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n                }\n              );\n            }\n          }]\n        }).then((alertEl: HTMLIonAlertElement) => {\n          alertEl.present();\n        });\n\n      } else {\n        this.inventoryService.updateStockStatus(product._id, status, this.currentGroup).pipe(take(1)).subscribe(\n          () => {\n            product.stockStatus[this.currentGroup] = status;\n            if (product.stockStatus[this.currentGroup] !== '') {\n              this.updateProducts(product);\n              this.toasterService.presentToast('', 'Inventoy Updated', 500);\n            }\n\n            if (product.stockCount[this.currentGroup] === 0) {\n              this.inventoryService.updateStockCount(product._id, 1, this.currentGroup).pipe(take(1)).subscribe(\n                () => {\n                  product.stockCount[this.currentGroup] = 1;\n                  this.updateProducts(product);\n                  this.sortBy = 'none';\n                  this.toasterService.presentToast('', 'Inventoy Updated', 500);\n                }, (error: string) => {\n                  this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n                }\n              );\n            }\n          }, (error: string) => {\n            this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n          }\n        );\n      }\n    } else {\n      this.presentAddGroupAlert();\n    }\n  }\n\n  // popover and alert functions\n  presentCategoryFilterAlert(): void {\n    let categories: SettingsModel['categories'] = [{\n      '': 'All Products'\n    }, ];\n\n    categories = categories.concat(this.settingsService.settings.categories);\n\n    this.popoverController.create({\n      component: FilterProductsComponent,\n      componentProps: {\n        categories,\n        selectedCategory: this.selectedCategory.id\n      }\n    }).then((popoverEl: HTMLIonPopoverElement) => {\n      popoverEl.present();\n      return popoverEl.onDidDismiss();\n    }).then((popoverResult: {\n      data: {\n        id: string,\n        name: string\n      },\n      role: string\n    }) => {\n      if (popoverResult.role === 'filter') {\n        this.selectedCategory.id = popoverResult.data.id;\n        this.selectedCategory.name = popoverResult.data.name;\n        this.applyProductCategoryFilter(this.selectedCategory.id);\n      }\n    });\n  }\n\n  presentSortAlert(): void {\n    this.popoverController.create({\n      component: SortProductsComponent,\n      componentProps: {\n        sortBy: this.sortBy\n      },\n    }).then((popoverEl: HTMLIonPopoverElement) => {\n      popoverEl.present();\n      return popoverEl.onDidDismiss();\n    }).then((popoverResult: {\n      data: string,\n      role: string\n    }) => {\n      if (popoverResult.role === 'filter') {\n        this.sortBy = popoverResult.data;\n        this.products = this.applyProductSortFilter(popoverResult.data)\n      }\n    });\n  }\n\n  presentInventoryActionSheet(product: ProductModel) {\n    this.actionSheetController.create({\n      header: 'Options',\n      buttons: [{\n        text: 'Cancel',\n        icon: 'close-outline',\n        role: 'desctructive'\n      }, {\n        text: 'Manage Product',\n        icon: 'create-outline',\n        handler: () => {\n          this.filtered = [];\n          this.filtered.push(product);\n          this.showDoneButton = true;\n          this.searchString = product.name;\n        }\n      }]\n    }).then((actionEl: HTMLIonActionSheetElement) => {\n      actionEl.present();\n    })\n  }\n\n  presentAddGroupAlert() {\n    this.alertController.create({\n      header: 'No Group Selected',\n      message: 'Please go to settings and select a group.',\n      buttons: [{\n        text: 'Ok',\n        handler: () => {\n          this.router.navigate(['/', 'app', 'settings', 'manage-app'])\n        }\n      }]\n    }).then((alertEl: HTMLIonAlertElement) => {\n      alertEl.present();\n    });\n\n  }\n\n  // utility functions\n  updateProducts(product: ProductModel): void {\n    const index: number = this.products.findIndex((prod: ProductModel) => {\n      if (prod._id === product._id) {\n        return true;\n      }\n    });\n\n    if (index !== -1) {\n      this.products[index] = product;\n    } else {\n      this.products = [product].concat(this.products);\n    }\n\n    if (this.getProductsView === 'partial') {\n      this.products = this.products.filter((prod: ProductModel) => {\n        if (prod.stockStatus[this.currentGroup] !== 'empty') {\n          return true;\n        }\n      });\n    }\n\n    this.allProducts = this.products;\n  }\n\n  applyProductCategoryFilter(cid: string): void {\n\n    if (cid === '') {\n      this.products = this.allProducts;\n      return;\n    }\n\n    const tempProducts: ProductModel[] = [...this.allProducts];\n\n    this.products = tempProducts.filter(prod => {\n      if (prod.cid === cid) {\n        return true;\n      }\n    });\n  }\n\n  applyProductSortFilter(sortBy: string): ProductModel[] {\n\n    const tempProducts: ProductModel[] = [...this.allProducts];\n    let products: ProductModel[];\n\n    if (sortBy === 'none') {\n      products = this.allProducts;\n      return products;\n    }\n\n    if (sortBy === 'price') {\n      products = tempProducts.sort((prod1: ProductModel, prod2: ProductModel) => {\n        return +prod1.price - +prod2.price;\n      });\n    }\n\n\n    if (sortBy === 'units') {\n      products = tempProducts.sort((prod1: ProductModel, prod2: ProductModel) => {\n        return prod1.stockCount[this.currentGroup] - prod2.stockCount[this.currentGroup];\n      });\n    }\n\n    return products;\n\n  }\n\n\n  filterProducts(searchStr: string): void {\n    // regex will remove special characters from the search string\n    searchStr = searchStr.replace(/[^a-zA-Z]/g, '');\n\n    if (searchStr !== '') {\n      this.searchString = searchStr;\n      let tempArr = [];\n\n      let regExp: RegExp = new RegExp(`^.*${searchStr}.*$`, 'i');\n\n      for (let product of this.allProducts) {\n        if (regExp.test(product.name)) {\n          tempArr.push(product);\n        }\n      }\n\n      this.filtered = tempArr;\n    }\n\n    if (searchStr === '') {\n      this.filtered = [];\n    }\n  }\n\n}\n","import {\n  NgModule\n} from '@angular/core';\nimport {\n  RouterModule,\n  Routes\n} from '@angular/router';\nimport {\n  InventoryPage\n} from './inventory.page';\n\nconst routes: Routes = [{\n  path: '',\n  component: InventoryPage\n}]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InventoryRoutingModule {\n\n}\n"],"sourceRoot":"webpack:///"}