{"version":3,"sources":["./src/app/auth/register/register.page.html","./src/app/auth/register/register-routing.module.ts","./src/app/auth/register/register.module.ts","./src/app/auth/register/register.page.css","./src/app/auth/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Grocery App</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <ion-grid style=\\\"height: 100%;\\\">\\n    <ion-row class=\\\"ion-justify-content-center\\\" style=\\\"height: 100%; align-content: center;\\\">\\n      <ion-col size=\\\"12\\\" size-sm=\\\"10\\\" size-md=\\\"8\\\" size-lg=\\\"6\\\" size-xl=\\\"4\\\" class=\\\"ion-no-padding\\\">\\n        <ion-toolbar>\\n          <ion-title class=\\\"ion-text-center ion-padding\\\" style=\\\"border-bottom: 1px solid;\\\">Register</ion-title>\\n        </ion-toolbar>\\n        <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"registrationForm\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Name</ion-label>\\n            <ion-input formControlName=\\\"name\\\" type=\\\"text\\\" required minlength=\\\"3\\\" maxlength=\\\"20\\\"></ion-input>\\n          </ion-item>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Email</ion-label>\\n            <ion-input formControlName=\\\"email\\\" type=\\\"email\\\" email required></ion-input>\\n          </ion-item>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Password\\n              <small style=\\\"color: #ffd534\\\" *ngIf=\\\"showPasswordHint\\\">\\n                (6-12 characters long)\\n              </small>\\n            </ion-label>\\n            <ion-input formControlName=\\\"password\\\" type=\\\"password\\\" required minlength=\\\"6\\\" maxlength=\\\"12\\\"\\n              (ionFocus)=\\\"showPasswordHint = true\\\" (ionBlur)=\\\"showPasswordHint = false\\\"></ion-input>\\n          </ion-item>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Confirm Password\\n              <small style=\\\"color: #ff4961\\\"\\n                *ngIf=\\\"registrationForm.errors?.invalidPassword && registrationForm.get('confirmPassword').dirty\\\">\\n                (Passwords do not match)</small>\\n            </ion-label>\\n            <ion-input formControlName=\\\"confirmPassword\\\" type=\\\"password\\\" required minlength=\\\"6\\\" maxlength=\\\"12\\\">\\n            </ion-input>\\n          </ion-item>\\n          <ion-button type=\\\"submit\\\" expand=\\\"full\\\"\\n            [disabled]=\\\"registrationForm.invalid && registrationForm.errors?.invalidPassword\\\" class=\\\"ion-no-margin\\\">\\n            Register</ion-button>\\n        </form>\\n        <div style=\\\"text-align: center; padding: 5px;\\\">\\n        </div>\\n      </ion-col>\\n      <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n        <ion-button fill=\\\"clear\\\" color=\\\"primary\\\" [routerLink]=\\\"['/', 'auth', 'login']\\\"><small>Login</small></ion-button>\\n        <ion-button fill=\\\"clear\\\" color=\\\"primary\\\" [routerLink]=\\\"['/', 'auth', 'activate-account', 'null']\\\">\\n          <small>Activation Code</small></ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import {\n  NgModule\n} from '@angular/core';\nimport {\n  RouterModule,\n  Routes\n} from '@angular/router';\nimport {\n  RegisterPage\n} from './register.page';\n\nconst routes: Routes = [{\n  path: '',\n  component: RegisterPage\n} ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule {\n\n}\n","import {\n  CommonModule\n} from '@angular/common';\nimport {\n  NgModule\n} from '@angular/core';\nimport {\n  ReactiveFormsModule\n} from '@angular/forms';\nimport {\n  IonicModule\n} from '@ionic/angular';\nimport {\n  RegisterRoutingModule\n} from './register-routing.module';\nimport {\n  RegisterPage\n} from './register.page';\n\n@NgModule({\n  declarations: [RegisterPage],\n  imports: [CommonModule, IonicModule, ReactiveFormsModule, RegisterRoutingModule]\n})\nexport class RegisterModule {\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5wYWdlLmNzcyJ9 */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  FormControl,\n  Validators,\n  ValidatorFn,\n  AbstractControl,\n  ValidationErrors,\n  FormBuilder\n} from '@angular/forms';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  AlertController\n} from '@ionic/angular';\nimport {\n  ToasterService\n} from 'src/app/services/toaster.service';\nimport {\n  AuthService\n} from './../../services/auth.service';\n\nconst comparePassword: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n  let same = false;\n\n  if (password.value.length >= 6 && password.value.length <= 12) {\n    same = password.value === confirmPassword.value;\n  }\n\n  if (same && control.get('confirmPassword').dirty) {\n    return null;\n  } else {\n    return {\n      invalidPassword: true\n    }\n  }\n\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: 'register.page.html',\n  styleUrls: ['register.page.css']\n})\nexport class RegisterPage implements OnInit {\n\n  showPasswordHint: boolean;\n\n  registrationForm = this.fb.group({\n    name: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(12)]),\n    confirmPassword: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(12)])\n  }, {\n    validators: [comparePassword]\n  });\n\n  constructor(private fb: FormBuilder,\n    private authService: AuthService,\n    private alertController: AlertController,\n    private router: Router,\n    private toasterService: ToasterService) {}\n\n  ngOnInit() {\n    this.showPasswordHint = false;\n  }\n\n  onSubmit() {\n    this.authService.register(this.registrationForm.value).subscribe(\n      () => {\n        this.authService.getActivationLink(this.registrationForm.value.email).subscribe(\n          () => {\n            this.alertController.create({\n              header: 'Success',\n              message: 'Activation link mailed to the email address. Please click on the link to activate the account',\n              buttons: [{\n                text: 'Ok',\n                handler: () => {\n                  this.router.navigate(['/', 'auth', 'login']);\n                }\n              }]\n            }).then(\n              (alertEl: HTMLIonAlertElement) => {\n                alertEl.present();\n              }\n            );\n          }, (error: string) => {\n            this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n          }\n        );\n      }, (error: string) => {\n        this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n      }\n    )\n  }\n\n}\n"],"sourceRoot":"webpack:///"}