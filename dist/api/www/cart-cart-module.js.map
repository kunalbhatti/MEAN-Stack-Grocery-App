{"version":3,"sources":["./src/app/main/cart/cart.page.css","./src/app/main/cart/cart.module.ts","./src/app/main/cart/cart.page.html","./src/app/main/cart/cart-routing.module.ts","./src/app/main/cart/cart.page.ts"],"names":[],"mappings":"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","file":"cart-cart-module.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXJ0LnBhZ2UuY3NzIn0= */\";","import {\n  CommonModule\n} from '@angular/common';\nimport {\n  NgModule\n} from '@angular/core';\nimport {\n  FormsModule\n} from '@angular/forms';\nimport {\n  IonicModule\n} from '@ionic/angular';\nimport {\n  CartRoutingModule\n} from './cart-routing.module';\nimport {\n  CartPage\n} from './cart.page';\n\n@NgModule({\n  declarations: [CartPage],\n  imports: [CommonModule, IonicModule, CartRoutingModule, FormsModule]\n})\nexport class CartModule {\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title class=\\\"ion-padding-top\\\">\\n      Cart\\n      <ion-label *ngIf=\\\"currentGroup?.name\\\"><small>({{currentGroup?.name|titlecase}})</small></ion-label>\\n    </ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\" *ngIf=\\\"searchString === ''\\\">\\n      <ion-button (click)=\\\"presentCategoryFilterPopover()\\\" size=\\\"small\\\">\\n        <ion-icon name=\\\"filter-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-grid>\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-col size=\\\"12\\\" size-sm=\\\"10\\\" size-md=\\\"8\\\" size-lg=\\\"6\\\" size-xl=\\\"4\\\"\\n          class=\\\"ion-margin-start ion-margin-end ion-no-padding\\\">\\n          <ion-searchbar color=\\\"light\\\" showCancelButton=\\\"focus\\\" [(ngModel)]=\\\"searchString\\\" #searchStr\\n            (ionInput)=\\\"getProductList(searchStr.value)\\\">\\n          </ion-searchbar>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n    <ion-buttons slot=\\\"end\\\" *ngIf=\\\"searchString === ''\\\">\\n      <ion-button (click)=\\\"presentSortPopover()\\\" size=\\\"small\\\">\\n        <ion-icon name=\\\"funnel-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col size=\\\"12\\\" size-sm=\\\"10\\\" size-md=\\\"8\\\" class=\\\"ion-text-center\\\">\\n        <ion-toolbar size=\\\"12\\\" class=\\\"ion-text-center\\\" style=\\\"background-color: #1f1f1f;\\\">\\n          <ion-title *ngIf=\\\"(productError === '' && searchString === '') ||\\n          (filterError === '' && searchString !== ''); else errorCondition\\\">{{selectedCategory.name | titlecase}}\\n          </ion-title>\\n          <ng-template #errorCondition>\\n            <ion-title>Operation Failed</ion-title>\\n          </ng-template>\\n        </ion-toolbar>\\n\\n        <ion-list style=\\\"background-color: rgb(40, 41, 44);\\\" *ngIf=\\\"searchString === '' && products?.length > 0\\\">\\n          <ion-card>\\n            <ion-item style=\\\"font-size: 0.9rem;\\\">\\n              <ion-label color=\\\"primary\\\">Estimated Cost</ion-label>\\n              <ion-text color=\\\"success\\\">{{cartCost}} /-</ion-text>\\n            </ion-item>\\n          </ion-card>\\n          <ion-card *ngFor=\\\"let product of products\\\">\\n            <ion-card-header>\\n              <ion-card-title>\\n                {{product?.name | titlecase}}\\n              </ion-card-title>\\n              <ion-card-subtitle>\\n                {{product?.brand | titlecase}}\\n              </ion-card-subtitle>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <ion-item *ngIf=\\\"product?.size\\\">\\n                <ion-label>\\n                  Size: {{product?.size | titlecase}}\\n                </ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"product?.quantity\\\">\\n                <ion-label>\\n                  Quantity: {{product?.quantity}}\\n                </ion-label>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"product?.price\\\">\\n                <ion-label>Price: {{product?.price}}</ion-label>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label>Cart: {{product?.cart[currentGroup.id]}}</ion-label>\\n              </ion-item>\\n            </ion-card-content>\\n            <ion-row class=\\\"ion-justify-content-center\\\">\\n              <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" (click)=\\\"presentCartActionSheet(product)\\\">\\n                <ion-icon name=\\\"ellipsis-horizontal\\\"></ion-icon>\\n              </ion-button>\\n            </ion-row>\\n          </ion-card>\\n        </ion-list>\\n\\n        <ion-list style=\\\"background-color: rgb(40, 41, 44);\\\" class=\\\"ion-padding\\\" *ngIf=\\\"searchString === ''\\\">\\n          <ion-text *ngIf=\\\"productError === '' && products?.length === 0\\\">{{searchStatus}}</ion-text>\\n          <ion-text *ngIf=\\\"productError !== ''\\\">{{productError}}</ion-text>\\n        </ion-list>\\n\\n        <ion-list style=\\\"background-color: rgb(40, 41, 44);\\\" *ngIf=\\\"searchString !== '' && filtered.length > 0\\\">\\n          <ion-card>\\n            <ion-item style=\\\"font-size: 0.9rem;\\\">\\n              <ion-label color=\\\"primary\\\">Estimated Cost</ion-label>\\n              <ion-text color=\\\"success\\\">{{filteredCost}} /-</ion-text>\\n            </ion-item>\\n          </ion-card>\\n          <ion-card *ngFor=\\\"let product of filtered\\\">\\n            <ion-card-header>\\n              <ion-card-title>\\n                {{product?.name | titlecase}}\\n              </ion-card-title>\\n              <ion-card-subtitle>\\n                {{product?.brand | titlecase}}\\n              </ion-card-subtitle>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <ion-item *ngIf=\\\"product?.size\\\">Size: {{product?.size | titlecase}}</ion-item>\\n              <ion-item *ngIf=\\\"product?.quantity\\\">Quantity: {{product?.quantity}}</ion-item>\\n              <ion-item *ngIf=\\\"product?.price\\\">Price: {{product?.price}}</ion-item>\\n              <ion-item>Stock:\\n                {{product?.stockCount[currentGroup.id]}}\\n              </ion-item>\\n              <ion-item>Status:\\n                {{product?.stockStatus[currentGroup.id] === '' ? 'Empty' : product?.stockStatus[currentGroup.id] | titlecase}}\\n              </ion-item>\\n              <ion-item>Cart:\\n                <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" size=\\\"small\\\" (click)=\\\"updateProductCartCount(product, -1);\\\"\\n                  [disabled]=\\\"updateLock || product?.cart[currentGroup.id] === 0\\\">\\n                  <ion-icon name=\\\"caret-down-outline\\\"></ion-icon>\\n                </ion-button>\\n                <ion-text>{{product?.cart[currentGroup.id]}}</ion-text>\\n                <ion-button fill=\\\"clear\\\" color=\\\"dark\\\" size=\\\"small\\\" (click)=\\\"updateProductCartCount(product, 1);\\\"\\n                  [disabled]=\\\"updateLock\\\">\\n                  <ion-icon name=\\\"caret-up-outline\\\"></ion-icon>\\n                </ion-button>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\" *ngIf=\\\"showDoneButton\\\">\\n                <ion-col class=\\\"ion-text-center ion-padding-top\\\">\\n                  <ion-button fill=\\\"clear\\\" (click)=\\\"showDoneButton = false; searchString = ''\\\">Done</ion-button>\\n                </ion-col>\\n              </ion-item>\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-list>\\n        <ion-list style=\\\"background-color: rgb(40, 41, 44);\\\" class=\\\"ion-padding\\\" *ngIf=\\\"searchString !== ''\\\">\\n          <ion-text *ngIf=\\\"searchString !== '' && filterError === '' && filtered?.length === 0\\\">{{filterStatus}}\\n          </ion-text>\\n          <ion-text *ngIf=\\\"searchString !== '' && filterError !== ''\\\">{{filterError}}</ion-text>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n</ion-content>\\n\";","import {\n  NgModule\n} from '@angular/core';\nimport {\n  RouterModule,\n  Routes\n} from '@angular/router';\nimport {\n  CartPage\n} from './cart.page';\n\nconst routes: Routes = [{\n  path: '',\n  component: CartPage\n}, ]\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CartRoutingModule {\n\n}\n","import {\n  Component\n} from '@angular/core';\nimport {\n  Router\n} from '@angular/router';\nimport {\n  ActionSheetController,\n  AlertController,\n  PopoverController\n} from '@ionic/angular';\nimport {\n  take\n} from 'rxjs/operators';\n\n// components\nimport {\n  ConfirmDeleteComponent\n} from '../settings/manage-app/modals/confirm-delete/confirm-delete.component';\nimport {\n  AddToInventoryComponent\n} from './modals/add-to-inventory/add-to-inventory.component';\nimport {\n  FilterProductsComponent\n} from './modals/filter-products/filter-products.component';\nimport {\n  SortProductsComponent\n} from './modals/sort-products/sort-products.component';\n\n// services\nimport {\n  CartService\n} from './../../services/cart.service';\nimport {\n  InventoryService\n} from './../../services/inventory.service';\nimport {\n  ExpenseService\n} from './../../services/expense.service';\nimport {\n  ToasterService\n} from './../../services/toaster.service';\nimport {\n  SettingsService\n} from './../../services/settings.service';\nimport {\n  SearchBarService\n} from './../../services/searchbar.service';\n\n// models\nimport {\n  ProductModel\n} from './../../models/product.model';\nimport {\n  ExpenseModel\n} from './../../models/expense.model';\nimport {\n  SettingsModel\n} from './../../models/settings.model';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: 'cart.page.html',\n  styleUrls: ['cart.page.css']\n})\nexport class CartPage {\n\n  allProducts: ProductModel[] = [];\n\n  // products array is used for rendering products with cart count greater than zero\n  products: ProductModel[];\n\n  // filtered array is used for rendering products filtered from searchbar\n  filtered: ProductModel[] = [];\n\n  currentGroup: {\n    id: string,\n    name: string\n  } = {\n    id: '',\n    name: ''\n  };\n\n  // stores filtered value for categories\n  // default is all products\n  selectedCategory: {\n    id: string\n    name: string,\n  } = {\n    id: '',\n    name: 'all products'\n  };\n\n  // sort filter\n  // sort by price or cart units\n  sortBy: string = 'none';\n\n\n  productError: string = '';\n  filterError: string = '';\n  searchString: string = '';\n  searchStatus: string = 'No Items Found';\n  filterStatus: string;\n  showDoneButton: boolean = false;\n  cartCost: number = 0;\n  filteredCost: number = 0;\n\n  // all buttons are disabled when the update lock is true\n  updateLock: boolean = false;\n\n  constructor(private settingsService: SettingsService,\n    private toasterService: ToasterService,\n    private cartService: CartService,\n    private inventoryService: InventoryService,\n    private searchBarService: SearchBarService,\n    private expenseService: ExpenseService,\n    private alertController: AlertController,\n    private popoverController: PopoverController,\n    private actionSheetController: ActionSheetController,\n    private router: Router) {}\n\n  ionViewDidEnter() {\n    this.searchStatus = 'Loading Cart';\n\n    // extracting the currentGroup name from the settings\n    try {\n      this.currentGroup.id = this.settingsService.settings.currentGroup;\n    } catch (error) {\n      this.currentGroup.id = '';\n    }\n\n    if (!this.currentGroup.id) {\n      this.presentAddGroupAlert();\n    }\n\n    if (this.currentGroup.id) {\n\n      const groups = this.settingsService.settings.groups;\n\n      if (groups) {\n        groups.forEach(group => {\n          if (group[this.currentGroup.id]) {\n            this.currentGroup.name = group[this.currentGroup.id];\n            return;\n          }\n        });\n      }\n      if (!groups) {\n        this.currentGroup = {\n          id: '',\n          name: ''\n        };\n      }\n\n      this.cartService.getCart(this.currentGroup.id, this.selectedCategory.id).pipe(take(1)).subscribe((products: ProductModel[]) => {\n        // maintainig original copy of the data\n        // used to render products the searchbar is cleared\n        this.allProducts = [...products];\n\n        this.products = products;\n\n        if (this.products.length === 0) {\n          this.searchStatus = 'No Items Found';\n        } else {\n          this.cartCost = 0;\n          this.cartCost = this.calculateCartCost(this.products);\n        }\n      }, (error: string) => {\n        this.productError = error;\n        this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n      });\n    }\n  }\n\n  ionViewDidLeave() {\n    this.filtered = [];\n    this.products = [];\n    this.selectedCategory = {\n      id: '',\n      name: 'All Products'\n    }\n    this.sortBy = 'none';\n    this.searchString = '';\n  }\n\n  getProductList(searchStr: string): void {\n    this.filtered = [];\n    // regex will remove special characters from the search string\n    searchStr = searchStr.replace(/[^a-zA-Z]/g, '');\n\n    this.searchString = searchStr;\n\n    if (searchStr !== '') {\n      this.filterStatus = 'Searching Products'\n      this.filtered = [];\n\n      this.searchBarService.getProductList(searchStr, this.selectedCategory.id).pipe(take(1)).subscribe((data: ProductModel[]) => {\n        this.filtered = data;\n        if (this.filtered.length === 0) {\n          this.filterStatus = 'No Items Found';\n        } else {\n          this.filteredCost = 0;\n          this.filteredCost = this.calculateCartCost(this.filtered);\n        }\n      }, (error: string) => {\n        this.filterError = error;\n        this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n      });\n    } else {\n      this.showDoneButton = false;\n    }\n  }\n\n\n  updateProductCartCount(product: ProductModel, count: number): void {\n    if (this.currentGroup.id.length > 0) {\n      this.updateLock = true;\n      this.cartService.updateCartCount(product._id, count, this.currentGroup.id).pipe(take(1)).subscribe(\n        () => {\n          product.cart[this.currentGroup.id] += count;\n          this.updateProducts(product);\n          // neutralize sort filter\n          this.sortBy = 'none';\n          this.updateLock = false;\n          this.toasterService.presentToast('', 'Cart Updated', 500);\n        }, (error: string) => {\n          this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n        }\n      );\n    } else {\n      this.presentAddGroupAlert();\n    }\n  }\n\n  // popover and alert functions\n\n  presentCategoryFilterPopover(): void {\n    let categories: SettingsModel['categories'] = [{\n      '': 'All Products'\n    }, ];\n    categories = categories.concat(this.settingsService.settings.categories);\n    this.popoverController.create({\n      component: FilterProductsComponent,\n      componentProps: {\n        categories,\n        selectedCategory: this.selectedCategory.id\n      }\n    }).then((popoverEl: HTMLIonPopoverElement) => {\n      popoverEl.present();\n      return popoverEl.onDidDismiss();\n    }).then((popoverResult: {\n      data: {\n        id: string,\n        name: string\n      },\n      role: string\n    }) => {\n      if (popoverResult.role === 'filter') {\n        this.selectedCategory.id = popoverResult.data.id;\n        this.selectedCategory.name = popoverResult.data.name;\n        this.applyProductCategoryFilter(this.selectedCategory.id);\n      }\n    });\n  }\n\n  presentSortPopover(): void {\n    this.popoverController.create({\n      component: SortProductsComponent,\n      componentProps: {\n        sortBy: this.sortBy\n      },\n    }).then((popoverEl: HTMLIonPopoverElement) => {\n      popoverEl.present();\n      return popoverEl.onDidDismiss();\n    }).then((popoverResult: {\n      data: string,\n      role: string\n    }) => {\n      if (popoverResult.role === 'filter') {\n        this.sortBy = popoverResult.data;\n        this.products = this.applyProductSortFilter(popoverResult.data)\n      }\n    });\n  }\n\n  presentCartActionSheet(product: ProductModel): void {\n    this.actionSheetController.create({\n      header: 'Options',\n      buttons: [{\n        text: 'Cancel',\n        icon: 'close-outline',\n        role: 'destructive'\n      }, {\n        text: 'Manage Product',\n        icon: 'create-outline',\n        handler: () => {\n          this.filtered.push(product);\n          this.filteredCost = +product.price * +product.cart[this.currentGroup.id];\n          this.showDoneButton = true;\n          this.searchString = product.name;\n        }\n      }, {\n        text: 'Add To Inventory',\n        icon: 'home-outline',\n        handler: () => {\n          this.popoverController.create({\n            component: AddToInventoryComponent,\n            componentProps: {\n              product,\n              gid: this.currentGroup.id\n            }\n          }).then((popoverEl: HTMLIonPopoverElement) => {\n            popoverEl.present();\n            return popoverEl.onDidDismiss();\n          }).then((popoverResult: {\n            data: {\n              units: number,\n              cost: number\n            },\n            role: string\n          }) => {\n            if (popoverResult.role == 'create') {\n              // only add to inventory when the units and cost is greater that zero\n              if (popoverResult.data.units > 0 && popoverResult.data.cost > 0) {\n                // first update the products cart count to zero by subracting  product.cart[this.currentGroup.id]\n                this.cartService.updateCartCount(product._id, -product.cart[this.currentGroup.id], this.currentGroup.id).subscribe(\n                  () => {\n                    /// update the products cart count locally\n                    product.cart[this.currentGroup.id] -= product.cart[this.currentGroup.id];\n                    this.updateProducts(product);\n                    this.sortBy = 'none';\n                    this.updateLock = false;\n\n                    // update the inventory\n                    this.inventoryService.updateStockCount(product._id, popoverResult.data.units, this.currentGroup.id).subscribe(\n                      () => {\n                        // if the products was previously empty, update the stok status to full\n                        if (product.stockCount[this.currentGroup.id] === 0) {\n                          this.inventoryService.updateStockStatus(product._id, 'full', this.currentGroup.id).subscribe(\n                            () => {}, (error: string) => {\n                              this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n                            }\n                          );\n                        }\n                        const expense: ExpenseModel = {\n                          pid: product._id,\n                          cid: product.cid,\n                          gid: this.currentGroup.id,\n                          cost: popoverResult.data.cost,\n                          units: popoverResult.data.units,\n                          name: product.name,\n                          brand: product.brand,\n                          date: {\n                            date: new Date().getDate(),\n                            month: new Date().getMonth() + 1,\n                            year: new Date().getFullYear()\n                          }\n                        }\n\n                        // adding expense\n                        this.expenseService.addExpense(expense).subscribe(\n                          () => {\n\n                          }, (error: string) => {\n                            this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n                          }\n                        );\n                        this.toasterService.presentToast('', 'Inventory Updated', 500);\n                      }\n                    );\n                  }, (error: string) => {\n                    this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n                  }\n                );\n              }\n            }\n          });\n        }\n      }, {\n        text: 'Remove From Cart',\n        icon: 'bag-remove-outline',\n        handler: () => {\n          this.popoverController.create({\n            component: ConfirmDeleteComponent,\n            componentProps: {\n              type: 'Cart Item',\n              message: 'Are you sure you want to remove this item from the cart?'\n            }\n          }).then((popoverEl: HTMLIonPopoverElement) => {\n            popoverEl.present();\n            return popoverEl.onDidDismiss();\n          }).then(popoverResult => {\n            if (popoverResult.role === 'delete') {\n              this.cartService.updateCartCount(product._id, -product.cart[this.currentGroup.id], this.currentGroup.id).subscribe(\n                () => {\n                  product.cart[this.currentGroup.id] -= product.cart[this.currentGroup.id];\n                  this.updateProducts(product);\n                  this.sortBy = 'none';\n                  this.updateLock = false;\n                  this.toasterService.presentToast('', 'Cart Updated', 500);\n                }\n              );\n            }\n          });\n        }\n      }]\n    }).then((actionEl: HTMLIonActionSheetElement) => {\n      actionEl.present();\n    })\n  }\n\n  presentAddGroupAlert() {\n    this.alertController.create({\n      header: 'No Group Selected',\n      message: 'Please go to settings and select a group.',\n      buttons: [{\n        text: 'Ok',\n        handler: () => {\n          this.router.navigate(['/', 'app', 'settings', 'manage-app'])\n        }\n      }]\n    }).then((alertEl: HTMLIonAlertElement) => {\n      alertEl.present();\n    });\n\n  }\n\n\n  // utility functions\n\n  updateProducts(product: ProductModel): void {\n    const index: number = this.products.findIndex((prod: ProductModel) => {\n      if (prod._id === product._id) {\n        return true;\n      }\n    });\n\n    if (index !== -1) {\n      this.products[index] = product;\n    } else {\n      this.products = [product].concat(this.products);\n    }\n\n    this.products = this.products.filter((prod: ProductModel) => {\n      if (prod.cart[this.currentGroup.id] !== 0) {\n        return true;\n      }\n    });\n\n    this.cartCost = 0;\n\n    this.products.forEach((prod: ProductModel) => {\n      this.cartCost += +prod.price * +prod.cart[this.currentGroup.id];\n    })\n\n    this.filteredCost = 0;\n\n    this.filteredCost += +product.price * +product.cart[this.currentGroup.id];\n\n    this.allProducts = [...this.products];\n  }\n\n  applyProductCategoryFilter(cid: string): void {\n    if (cid === '') {\n      this.cartCost = 0;\n      this.products = this.allProducts;\n      this.cartCost = this.calculateCartCost(this.products);\n      return;\n    }\n\n    const tempProducts: ProductModel[] = [...this.allProducts];\n\n    this.products = tempProducts.filter((prod: ProductModel) => {\n      if (prod.cid === cid) {\n        return true;\n      }\n    });\n\n    this.cartCost = 0;\n    this.cartCost = this.calculateCartCost(this.products);\n\n  }\n\n  applyProductSortFilter(sortBy: string): ProductModel[] {\n\n    const tempProducts: ProductModel[] = [...this.allProducts];\n    let products: ProductModel[];\n\n    if (sortBy === 'none') {\n      products = this.allProducts;\n      return products;\n    }\n\n    if (sortBy === 'price') {\n      products = tempProducts.sort((prod1: ProductModel, prod2: ProductModel) => {\n        return +prod1.price - +prod2.price;\n      });\n    }\n\n\n    if (sortBy === 'units') {\n      products = tempProducts.sort((prod1: ProductModel, prod2: ProductModel) => {\n        return prod1.cart[this.currentGroup.id] - prod2.cart[this.currentGroup.id];\n      });\n    }\n\n    return products;\n  }\n\n  calculateCartCost(products: ProductModel[]): number {\n    let cost = 0\n    products.forEach((prod: ProductModel) => {\n      cost += +prod.cart[this.currentGroup.id] * +prod.price;\n    });\n    return cost;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}