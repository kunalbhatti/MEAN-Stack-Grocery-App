{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./node_modules/@ionic/core/dist/esm/framework-delegate-bda125fb.js","./src/app/services/searchbar.service.ts","./src/app/main/settings/manage-app/modals/create-product/create-product.component.html","./src/app/main/settings/manage-app/modals/confirm-delete/confirm-delete.component.ts","./src/app/main/settings/manage-app/modals/create-product/create-product.component.ts","./src/app/main/settings/manage-app/modals/confirm-delete/confirm-delete.component.html","./src/app/services/toaster.service.ts","./src/app/services/cart.service.ts","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./src/app/main/settings/manage-app/modals/create-product/create-product.component.scss","./node_modules/@ionic/core/dist/esm/button-active-e272e3f1.js","./src/app/main/settings/manage-app/modals/confirm-delete/confirm-delete.component.scss","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./src/app/services/inventory.service.ts","./src/app/services/expense.service.ts"],"names":[],"mappings":"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AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAe,6GAA8C,mIAAmI,E;;;;;;;;;;;;ACAhM;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA,mEAAmE,qDAAoB;AACvF,kEAAkE,qDAAsB;AACxF;AACA;AACA,MAAM,6DAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAe,6GAA8C,mIAAmI,E;;;;;;;;;;;;ACAhM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;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","file":"common.js","sourcesContent":["const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { c as componentOnReady } from './helpers-cf6e85ee.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","import {\r\n  HttpClient\r\n} from '@angular/common/http';\r\nimport {\r\n  Injectable\r\n} from '@angular/core';\r\nimport {\r\n  Observable\r\n} from 'rxjs';\r\nimport {\r\n  catchError,\r\n} from 'rxjs/operators';\r\nimport {\r\n  ExpenseModel\r\n} from '../models/expense.model';\r\n\r\n\r\nimport * as config from './config.json';\r\nimport errorHandler from './error.handler';\r\nimport {\r\n  SettingsService\r\n} from './settings.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchBarService {\r\n\r\n  currentGroup: string;\r\n\r\n  constructor(private http: HttpClient, private settingsService: SettingsService) {}\r\n\r\n  getProductList(searchStr: string, cid ? : string): Observable < any > {\r\n    this.currentGroup = this.settingsService.settings.currentGroup;\r\n    return this.http.get(`${config.url}products/filter-products/?searchStr=${searchStr}&cid=${cid}&gid=${this.currentGroup}`).pipe(catchError(errorHandler));\r\n  }\r\n\r\n  getProductExpense(searchStr: string, date: ExpenseModel['date'], cid: string, selectedView: string): Observable < any > {\r\n    this.currentGroup = this.settingsService.settings.currentGroup;\r\n    return this.http.get(`${config.url}expenses/get-product-expense/?searchStr=${searchStr}&date=${JSON.stringify(date)}&cid=${cid}&gid=${this.currentGroup}&view=${selectedView}`).pipe(catchError(errorHandler));\r\n  }\r\n\r\n}\r\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{product?.name ? \\\"Edit Product\\\": \\\"Create Product\\\"}}</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button (click)=\\\"onDismiss()\\\">\\n        <ion-icon name=\\\"close-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row style=\\\"background-color: rgb(40, 41, 44);\\\">\\n      <ion-col size=\\\"12\\\">\\n        <form (ngSubmit)=\\\"product?.name ? editProduct(createProductForm): addProduct(createProductForm)\\\"\\n          #createProductForm=\\\"ngForm\\\">\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label position=\\\"floating\\\">Name <small>(Required)</small></ion-label>\\n            <ion-input [ngModel]=\\\"product?.name\\\" name=\\\"name\\\" required minlength=\\\"2\\\" maxlength=\\\"20\\\"></ion-input>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label position=\\\"floating\\\">Brand</ion-label>\\n            <ion-input [ngModel]=\\\"product?.brand\\\" name=\\\"brand\\\" minlength=\\\"2\\\" maxlength=\\\"20\\\"></ion-input>\\n          </ion-item>\\n          <ion-item>\\n            <ion-label>Size</ion-label>\\n            <ion-select okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\" [ngModel]=\\\"product?.size\\\" name=\\\"size\\\">\\n              <ion-select-option value=\\\"small\\\">Small</ion-select-option>\\n              <ion-select-option value=\\\"medium\\\">Medium</ion-select-option>\\n              <ion-select-option value=\\\"large\\\">Large</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label position=\\\"floating\\\">Quantity</ion-label>\\n            <ion-input [ngModel]=\\\"product?.quantity\\\" name=\\\"quantity\\\" minlength=\\\"2\\\" maxlength=\\\"20\\\"></ion-input>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label position=\\\"floating\\\">Price <small>(Required)</small></ion-label>\\n            <ion-input [ngModel]=\\\"product?.price\\\" name=\\\"price\\\" required minlength=\\\"2\\\" maxlength=\\\"20\\\"></ion-input>\\n          </ion-item>\\n          <ion-input hidden [ngModel]=\\\"product?._id\\\" name=\\\"_id\\\"></ion-input>\\n          <ion-input hidden [ngModel]=\\\"cid\\\" name=\\\"cid\\\"></ion-input>\\n          <ion-button type=\\\"submit\\\" expand=\\\"full\\\" color=\\\"primary\\\" [disabled]=\\\"createProductForm.invalid\\\">\\n            {{product?.name ? \\\"Edit\\\": \\\"Create\\\"}}\\n          </ion-button>\\n        </form>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import {\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport {\n  PopoverController\n} from '@ionic/angular';\n\n@Component({\n  selector: 'app-confirm-delete',\n  templateUrl: './confirm-delete.component.html',\n  styleUrls: ['./confirm-delete.component.scss'],\n})\nexport class ConfirmDeleteComponent implements OnInit {\n\n  @Input() type: string;\n  @Input() message: string;\n\n  constructor(private popoverController: PopoverController) {}\n\n  ngOnInit() {}\n\n  onDismiss(): void {\n    this.popoverController.dismiss(null, 'cancel');\n  }\n\n  onDelete(): void {\n    this.popoverController.dismiss(null, 'delete');\n  }\n}\n","import {\n  Component,\n  Input,\n  OnInit\n} from '@angular/core';\nimport {\n  NgForm\n} from '@angular/forms';\nimport {\n  ModalController\n} from '@ionic/angular';\n\nimport {\n  ToasterService\n} from './../../../../../services/toaster.service';\nimport {\n  ProductModel\n} from './../../../../../models/product.model';\nimport {\n  SettingsService\n} from './../../../../../services/settings.service';\n\n@Component({\n  selector: 'app-create-product',\n  templateUrl: './create-product.component.html',\n  styleUrls: ['./create-product.component.scss'],\n})\nexport class CreateProductComponent implements OnInit {\n\n  @Input() product: ProductModel;\n  @Input() cid: string;\n\n  constructor(private modalController: ModalController, private settingsService: SettingsService, private toasterService: ToasterService) {}\n\n  ngOnInit() {}\n\n  onDismiss(): void {\n    this.modalController.dismiss(null, 'cancel');\n  }\n\n  addProduct(form: NgForm): void {\n    this.settingsService.addProduct(form.value).subscribe(\n      (result: {\n        product: ProductModel\n      }) => {\n        this.modalController.dismiss(result.product, 'create');\n      }, (error: string) => {\n        this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n      }\n    )\n  }\n\n  editProduct(form: NgForm): void {\n    form.value.stockCount = this.product.stockCount;\n    form.value.stockStatus = this.product.stockStatus;\n\n    this.settingsService.editProduct(form.value).subscribe((result: {\n      product: ProductModel\n    }) => {\n      this.modalController.dismiss(result.product, 'edit');\n    }, (error: string) => {\n      this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n    })\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar class=\\\"ion-text-center\\\">\\n    <ion-title>Delete {{type}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n        <ion-text>\\n          {{message}}\\n        </ion-text>\\n      </ion-col>\\n      <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n        <ion-button color=\\\"primary\\\" (click)=\\\"onDismiss()\\\">Cancel</ion-button>\\n        <ion-button color=\\\"danger\\\" (click)=\\\"onDelete()\\\">Delete</ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","import {\n  Injectable\n} from '@angular/core';\nimport {\n  ToastController\n} from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ToasterService {\n  constructor(private toastController: ToastController) {}\n\n  presentToast(header: string, message: string, duration: number, color ? : string): void {\n    this.toastController.create({\n      header,\n      message,\n      duration,\n      color,\n      buttons: [{\n        icon: 'close-outline',\n        role: 'cancel'\n      }]\n    }).then((toastEl: HTMLIonToastElement) => {\n      toastEl.present();\n    });\n  }\n\n}\n","import {\r\n  HttpClient\r\n} from '@angular/common/http';\r\nimport {\r\n  Injectable\r\n} from '@angular/core';\r\nimport {\r\n  Observable\r\n} from 'rxjs';\r\nimport {\r\n  catchError\r\n} from 'rxjs/operators';\r\n\r\nimport * as config from './config.json';\r\nimport errorHandler from './error.handler';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n\r\n  getCart(gid: string, cid ? : string): Observable < any > {\r\n    return this.http.get(`${config.url}products/get-cart/?gid=${gid}&cid=${cid}`).pipe(catchError(errorHandler));\r\n  }\r\n\r\n  updateCartCount(productId: string, count: number, gid: string) {\r\n    return this.http.patch(`${config.url}products/update-cart-count/${productId}`, {\r\n      count,\r\n      gid\r\n    }).pipe(catchError(errorHandler));\r\n  }\r\n}\r\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjcmVhdGUtcHJvZHVjdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { c as writeTask } from './index-3ccd7557.js';\nimport { createGesture } from './index-f49d994d.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb25maXJtLWRlbGV0ZS5jb21wb25lbnQuc2NzcyJ9 */\";","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","import {\r\n  HttpClient\r\n} from '@angular/common/http';\r\nimport {\r\n  Injectable\r\n} from '@angular/core';\r\nimport {\r\n  Observable\r\n} from 'rxjs';\r\nimport {\r\n  catchError,\r\n  map,\r\n  take\r\n} from 'rxjs/operators';\r\nimport {\r\n  ProductModel\r\n} from '../models/product.model';\r\n\r\nimport * as config from './config.json';\r\nimport errorHandler from './error.handler';\r\nimport {\r\n  SettingsService\r\n} from './settings.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InventoryService {\r\n  currentGroup: string;\r\n  constructor(private http: HttpClient, private settingsService: SettingsService) {}\r\n\r\n  getInventory(getProductView: string, cid ? : string): Observable < any > {\r\n    this.currentGroup = this.settingsService.settings.currentGroup;\r\n    return this.http.get(`${config.url}products/get-inventory/?cid=${cid}&gid=${this.currentGroup}&getProductsView=${getProductView}`).pipe(take(1), map(\r\n      (products: ProductModel[]) => {\r\n\r\n        for (let product of products) {\r\n          if (!product.stockCount) {\r\n            product['stockCount'] = {\r\n              [this.currentGroup]: 0\r\n            };\r\n\r\n          }\r\n          if (!product.stockStatus) {\r\n            product['stockStatus'] = {\r\n              [this.currentGroup]: ''\r\n            };\r\n          }\r\n        }\r\n        return products;\r\n      }\r\n    ), catchError(errorHandler))\r\n  }\r\n\r\n  updateStockCount(productId: string, count: number, gid: string) {\r\n    return this.http.patch(`${config.url}products/update-stock-count/${productId}`, {\r\n      count,\r\n      gid\r\n    }).pipe(catchError(errorHandler));\r\n  }\r\n\r\n  updateStockStatus(productId: string, status: string, gid: string) {\r\n    return this.http.patch(`${config.url}products/update-stock-status/${productId}`, {\r\n      status,\r\n      gid\r\n    }).pipe(catchError(errorHandler));\r\n  }\r\n}\r\n","import {\r\n  HttpClient\r\n} from '@angular/common/http';\r\nimport {\r\n  Injectable\r\n} from '@angular/core';\r\nimport {\r\n  Observable\r\n} from 'rxjs';\r\nimport {\r\n  catchError\r\n} from 'rxjs/operators';\r\nimport {\r\n  ExpenseModel\r\n} from '../models/expense.model';\r\n\r\nimport * as config from './config.json';\r\nimport errorHandler from './error.handler';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ExpenseService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getExpense(month: number, year: number, gid: string, selectedView: string) {\r\n    return this.http.get(\r\n      `${config.url}expenses/get-expense/?month=${month}&year=${year}&gid=${gid}&view=${selectedView}`\r\n    ).pipe(catchError(errorHandler));\r\n  }\r\n\r\n  addExpense(expense: ExpenseModel): Observable < any > {\r\n\r\n    return this.http.post(\r\n      `${config.url}expenses/add-expense`,\r\n      expense\r\n    ).pipe(catchError(errorHandler));;\r\n  }\r\n\r\n  updateExpense(eid: string, update: {\r\n    date: ExpenseModel['date'],\r\n    cost: number\r\n  }) {\r\n    return this.http.patch(\r\n      `${config.url}expenses/update-expense/`, {\r\n        eid,\r\n        update\r\n      }\r\n    ).pipe(catchError(errorHandler));;\r\n  }\r\n\r\n  deleteExpense(eid: string) {\r\n    return this.http.delete(\r\n      `${config.url}expenses/delete-expense/${eid}`\r\n    ).pipe(catchError(errorHandler));;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}