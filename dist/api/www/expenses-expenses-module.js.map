{"version":3,"sources":["./src/app/main/expenses/modals/add-expense/add-expense.component.scss","./src/app/main/expenses/expenses.page.ts","./src/app/main/expenses/expenses.page.css","./src/app/main/expenses/expenses-routing.module.ts","./src/app/main/expenses/expenses.module.ts","./src/app/main/expenses/modals/edit-expense/edit-expense.component.html","./src/app/main/expenses/modals/edit-expense/edit-expense.component.ts","./src/app/main/expenses/modals/edit-expense/edit-expense.component.scss","./src/app/main/expenses/modals/add-expense/add-expense.component.ts","./src/app/main/expenses/expenses.page.html","./src/app/main/expenses/modals/add-expense/add-expense.component.html"],"names":[],"mappings":"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","file":"expenses-expenses-module.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtZXhwZW5zZS5jb21wb25lbnQuc2NzcyJ9 */\";","import {\n  Component,\n  OnInit\n} from '@angular/core';\nimport {\n  ActionSheetController,\n  AlertController,\n  PopoverController\n} from '@ionic/angular';\nimport {\n  take\n} from 'rxjs/operators';\n\n// components\nimport {\n  AddExpenseComponent\n} from './modals/add-expense/add-expense.component';\nimport {\n  EditExpenseComponent\n} from './modals/edit-expense/edit-expense.component';\nimport {\n  FilterProductsComponent\n} from '../cart/modals/filter-products/filter-products.component';\nimport {\n  ExpenseViewComponent\n} from './modals/expense-view/expense-view.component';\n\n// services\nimport {\n  ExpenseService\n} from '../../services/expense.service';\nimport {\n  SettingsService\n} from './../../services/settings.service';\nimport {\n  ToasterService\n} from 'src/app/services/toaster.service';\n\n// models\nimport {\n  ExpenseModel\n} from './../../models/expense.model';\nimport {\n  SettingsModel\n} from 'src/app/models/settings.model';\n\n@Component({\n  selector: 'app-expenses',\n  templateUrl: 'expenses.page.html',\n  styleUrls: ['expenses.page.css']\n})\nexport class ExpensesPage implements OnInit {\n\n  allExpenses: ExpenseModel[];\n  filtered: any[];\n\n  // expenses for each date are grouped together and stored as objects.\n  expenses: {\n    [date: number]: ExpenseModel[]\n  } = {};\n\n  // unique dates are extracted from the incoming response and stored in expenseDates.\n  // we iterate over expense dates to access the values stored in expenses object declared above.\n  expenseDates: ExpenseModel['date'][] = [];\n\n  // for storing the total expenditure for each date.\n  expensesDateTotal: {\n    [date: number]: number\n  } = {};\n\n  // total expenditure\n  total: number = 0;\n\n  currentGroup: {\n    id: string,\n    name: string\n  } = {\n    id: '',\n    name: ''\n  };\n\n  // stores filtered value for categories\n  // default is all products\n  selectedCategory: string = '';\n\n  // stores filtered value for expense viewFilter\n  selectedView: string = 'monthly';\n\n  // viewFilter is set to date if selectedView is monthly and to month is selectedView is yearly\n  viewFilter: string = 'date';\n\n  selectedMonth: number;\n  selectedYear: number;\n\n  // current date\n  selectedDate: string;\n\n  months: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  days: string[] = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  // used for storing filter value of view expenses filter\n  expensesArr: {\n    name: string,\n    id: string\n  } [] = [];\n\n  searchString: string = '';\n\n  constructor(private settingsService: SettingsService,\n    private expenseService: ExpenseService,\n    private toasterService: ToasterService,\n    private popoverController: PopoverController,\n    private actionSheetController: ActionSheetController,\n    private alertController: AlertController) {}\n\n  ngOnInit(): void {\n    // setting selectedMonth and selectedYear only one time when the page is originally loaded\n    this.selectedMonth = new Date().getMonth();\n    this.selectedYear = new Date().getFullYear();\n  }\n\n  ionViewDidEnter(): void {\n    this.selectedDate = (`${this.selectedYear}-${this.selectedMonth + 1 > 10 ? (this.selectedMonth + 1) : '0' + (this.selectedMonth + 1)}`);\n\n    // extracting the currentGroup name from the settings\n    this.currentGroup.id = this.settingsService.settings.currentGroup;\n\n    const groups: SettingsModel['groups'] = this.settingsService.settings.groups;\n\n    if (groups) {\n      groups.forEach((group: {\n        [id: string]: string;\n      }) => {\n        if (group[this.currentGroup.id]) {\n          this.currentGroup.name = group[this.currentGroup.id];\n          return;\n        }\n      });\n    }\n\n    if (!groups) {\n      this.currentGroup = {\n        id: '',\n        name: ''\n      };\n    }\n\n    this.getExpenses();\n  }\n\n  ionViewDidLeave() {\n    this.searchString = '';\n  }\n\n  // for getting expenses from the backend.\n  getExpenses(): void {\n    this.resetExpenseData();\n\n    this.expenseService.getExpense(this.selectedMonth + 1, this.selectedYear, this.currentGroup.id, this.selectedView).\n    pipe(take(1)).subscribe((expenses: ExpenseModel[]) => {\n      // maintainig original copy of the data\n      // used by searchbar for filtering data based of input characters\n      this.allExpenses = [...expenses];\n      expenses = this.applyCategoryFilter(expenses, this.selectedCategory);\n      this.extractExpenses(expenses);\n    }, (error: string) => {\n      this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n    });\n  }\n\n  // called if the user wants to navigate to other months\n  updateSelectMonth(event: CustomEvent): void {\n    const date = new Date(event.detail.value);\n    // condition to stop execution of code when the page is loaded for the first time\n    if (this.selectedMonth !== date.getMonth() || this.selectedYear !== date.getFullYear()) {\n      this.selectedMonth = date.getMonth();\n      this.selectedYear = date.getFullYear();\n      this.getExpenses();\n    }\n  }\n\n  // core method for extracting and formatting expense data\n  // data converted from array to object, sorted by date in ascending order\n  extractExpenses(expenses: ExpenseModel[]): void {\n    this.resetExpenseData();\n\n    // extracting the expenses list from the settings\n    let expArr: SettingsModel['expenses'] = this.settingsService.settings.expenses;\n\n    if (!expArr) {\n      expArr = [];\n    }\n\n    for (let exp of expArr) {\n      const key = Object.keys(exp).toString();\n      this.expensesArr.push({\n        id: key,\n        name: exp[key]\n      })\n    }\n\n    if (this.selectedView === 'yearly') {\n      this.viewFilter = 'month';\n    }\n\n    if (expenses.length > 0) {\n\n      // first we extract the unique dates.\n      for (let i = 0; i < expenses.length; i++) {\n        let flag = false;\n        for (let j = 0; j < this.expenseDates.length; j++) {\n          if (expenses[i].date[this.viewFilter] === this.expenseDates[j][this.viewFilter]) {\n            flag = true;\n            break;\n          }\n        }\n\n        if (!flag) {\n          this.expenseDates.push(expenses[i].date);\n        }\n      }\n\n      this.expenseDates.sort((exp1: ExpenseModel['date'], exp2: ExpenseModel['date']) => {\n        return exp1[this.viewFilter] - exp2[this.viewFilter];\n      })\n\n      // extracting the expenses for each date and storing them in groups\n      for (let date of this.expenseDates) {\n        let tempArr: ExpenseModel[] = [];\n\n        let cost: number = 0;\n\n        for (let j = 0; j < expenses.length; j++) {\n          if (expenses[j].date[this.viewFilter] === date[this.viewFilter]) {\n            tempArr.push(expenses[j]);\n            cost += +expenses[j].cost; // calculating the total cost for each group\n          }\n        }\n\n        this.expensesDateTotal[date[this.viewFilter]] = cost;\n        this.total += +cost; // calculating the total expenditure\n        this.expenses[date[this.viewFilter]] = tempArr;\n      }\n    } else {\n      this.expenses = {};\n    }\n  }\n\n\n  // popovers and alert functions\n\n  presentAddExpensePopover(): void {\n    this.popoverController.create({\n      component: AddExpenseComponent,\n      componentProps: {\n        expenses: this.expensesArr,\n        gid: this.currentGroup.id\n      }\n    }).then(\n      (popoverEl: HTMLIonPopoverElement) => {\n        popoverEl.present();\n        return popoverEl.onDidDismiss();\n      }\n    ).then((popoverResult: {\n      role: string,\n      data: ExpenseModel\n    }) => {\n      if (popoverResult.role === 'create') {\n        this.allExpenses.push(popoverResult.data);\n        this.extractExpenses([...this.allExpenses]);\n      }\n    })\n  }\n\n  presentExpenseActionSheet(expense: ExpenseModel): void {\n    this.actionSheetController.create({\n      header: 'Options',\n      buttons: [{\n        text: 'Cancel',\n        role: 'destructive',\n        icon: 'close-outline'\n      }, {\n        text: 'Update',\n        icon: 'create-outline',\n        handler: () => {\n          this.popoverController.create({\n            component: EditExpenseComponent,\n            componentProps: {\n              expense\n            }\n          }).then((popoverEl: HTMLIonPopoverElement) => {\n            popoverEl.present();\n            return popoverEl.onDidDismiss();\n          }).then((popoverResult: {\n            data: ExpenseModel,\n            role: string\n          }) => {\n            if (popoverResult.role === 'edit') {\n              // if the date is updated and the month and the year are same as selectedMonth and selectedYear\n              if (popoverResult.data.date.month === this.selectedMonth + 1 && popoverResult.data.date.year === this.selectedYear) {\n                // extract all the entries except the one editted\n                this.allExpenses = [...this.allExpenses].filter(exp => {\n                  if (exp._id !== popoverResult.data._id) {\n                    return true;\n                  }\n                });\n                // add the editted expense to the allExpenses\n                this.allExpenses.push(popoverResult.data);\n                // send for processing\n                this.extractExpenses(this.allExpenses);\n              } else {\n                // simply remove the entry from allExpenses if either the month or year are different\n                this.allExpenses = [...this.allExpenses].filter(exp => {\n                  if (exp._id !== popoverResult.data._id) {\n                    return true;\n                  }\n                })\n                this.extractExpenses(this.allExpenses);\n              }\n            }\n          })\n        }\n      }, {\n        text: 'Delete',\n        icon: 'trash-outline',\n        handler: () => {\n          this.alertController.create({\n            header: 'Delete Expense',\n            buttons: [{\n              text: 'Cancel',\n              role: 'cancel'\n            }, {\n              text: 'Delete',\n              handler: () => {\n                this.expenseService.deleteExpense(expense._id).subscribe(\n                  () => {\n                    this.allExpenses = [...this.allExpenses].filter(exp => {\n                      if (exp._id !== expense._id) {\n                        return true;\n                      }\n                    })\n                    this.extractExpenses([...this.allExpenses]);\n                  }, (error: string) => {\n                    this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n                  }\n                );\n              }\n            }]\n          }).then((alertEl: HTMLIonAlertElement) => {\n            alertEl.present();\n          });\n        }\n      }]\n    }).then((actionSheeEl: HTMLIonActionSheetElement) => {\n      actionSheeEl.present();\n    })\n  }\n\n  presentCategoryPopover(): void {\n    let categories: SettingsModel['expenses'] = [{\n      '': 'All Products'\n    }];\n\n    categories = categories.concat(this.settingsService.settings.categories);\n\n    let otherExpenses: {\n      others: string\n    } = {\n      others: 'Others'\n    }\n\n    categories.push(otherExpenses);\n\n    this.popoverController.create({\n      component: FilterProductsComponent,\n      componentProps: {\n        gid: this.currentGroup.id,\n        categories,\n        selectedCategory: this.selectedCategory\n      }\n    }).then((popoverEl: HTMLIonPopoverElement) => {\n      popoverEl.present();\n      return popoverEl.onDidDismiss();\n    }).then((popoverResult: {\n      data: {\n        id: string,\n        name: string\n      },\n      role: string\n    }) => {\n      if (popoverResult.role === 'filter') {\n        this.selectedCategory = popoverResult.data.id;\n        let tempArr = [...this.allExpenses];\n\n        tempArr = this.applyCategoryFilter(tempArr, popoverResult.data.id);\n\n        this.extractExpenses(tempArr)\n      }\n    });\n  }\n\n  presentViewFilterPopover(): void {\n    this.popoverController.create({\n      component: ExpenseViewComponent,\n      componentProps: {\n        selectedView: this.selectedView\n      }\n    }).then((popoverEl: HTMLIonPopoverElement) => {\n      popoverEl.present();\n      return popoverEl.onDidDismiss();\n    }).then((popoverResult: {\n      data: string,\n      role: string\n    }) => {\n      if (popoverResult.role === 'filter') {\n        this.selectedView = popoverResult.data;\n        if (this.selectedView === 'yearly') {\n          this.viewFilter = 'month';\n        } else {\n          this.viewFilter = 'date'\n        }\n        this.getExpenses();\n      }\n\n    })\n  }\n\n  // unitlity functions\n  resetExpenseData() {\n    this.expenses = {};\n    this.expenseDates = [];\n    this.expensesDateTotal = {};\n    this.expensesArr = [];\n    this.total = 0;\n  }\n\n  // for filering data from allExpenses based on searchString characters\n  filterProductExpenses(searchStr: string): void {\n    // regex will remove special characters from the search string\n    searchStr = searchStr.replace(/[^a-zA-Z]/g, '');\n\n    if (searchStr !== '') {\n      this.searchString = searchStr;\n      let tempArr = [];\n\n      let regExp: RegExp = new RegExp(`^.*${searchStr}.*$`, 'i');\n\n      for (let expense of this.allExpenses) {\n        if (regExp.test(expense.name)) {\n          tempArr.push(expense);\n        }\n      }\n      this.extractExpenses(tempArr);\n    }\n\n    if (searchStr === '') {\n      this.extractExpenses(this.allExpenses);\n    }\n  }\n\n  applyCategoryFilter(expenses: ExpenseModel[], cid: string): ExpenseModel[] {\n\n    if(cid === '') {\n      return expenses;\n    }\n\n    if (cid === 'others') {\n      cid = null;\n    }\n\n    return expenses.filter((exp: ExpenseModel) => {\n      if (exp.cid === cid) {\n        return true;\n      }\n    });\n\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJleHBlbnNlcy5wYWdlLmNzcyJ9 */\";","import {\n  NgModule\n} from '@angular/core';\nimport {\n  RouterModule,\n  Routes\n} from '@angular/router';\nimport {\n  ExpensesPage\n} from './expenses.page';\n\nconst routes: Routes = [{\n  path: '',\n  component: ExpensesPage\n}]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ExpensesRoutingModule {\n\n}\n","import {\n  NgModule\n} from '@angular/core';\nimport {\n  ExpensesPage\n} from './expenses.page';\nimport {\n  ExpensesRoutingModule\n} from './expenses-routing.module';\nimport {\n  CommonModule\n} from '@angular/common';\nimport {\n  IonicModule\n} from '@ionic/angular';\nimport {\n  AddExpenseComponent\n} from './modals/add-expense/add-expense.component';\nimport {\n  FormsModule\n} from '@angular/forms';\nimport {\n  EditExpenseComponent\n} from './modals/edit-expense/edit-expense.component';\n\n@NgModule({\n  declarations: [ExpensesPage, AddExpenseComponent, EditExpenseComponent],\n  imports: [CommonModule, IonicModule, ExpensesRoutingModule, FormsModule]\n})\nexport class ExpensesModule {\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar class=\\\"ion-text-center\\\">\\n    <ion-title>Edit Expense</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-no-padding\\\">\\n\\n  <form #createExpenseForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(createExpenseForm)\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Date</ion-label>\\n      <ion-datetime type=\\\"date\\\" [ngModel]=\\\"this.date\\\" name=\\\"date\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Expense</ion-label>\\n      <ion-input [value]=\\\"expense?.name | titlecase\\\" disabled></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Units</ion-label>\\n      <ion-input type=\\\"number\\\" [ngModel]=\\\"expense?.units\\\" name=\\\"units\\\" disabled></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Total Cost <small>(Required)</small></ion-label>\\n      <ion-input type=\\\"number\\\" [ngModel]=\\\"expense?.cost\\\" name=\\\"cost\\\" required></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-button fill=\\\"clear\\\" (click)=\\\"onDismiss()\\\">Cancel</ion-button>\\n        <ion-button type=\\\"submit\\\" fill=\\\"clear\\\" [disabled]=\\\"createExpenseForm.invalid\\\">Edit Expense</ion-button>\\n      </ion-row>\\n    </ion-item>\\n  </form>\\n</ion-content>\\n\";","import {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  NgForm\n} from '@angular/forms';\nimport {\n  PopoverController\n} from '@ionic/angular';\n\nimport {\n  ExpenseService\n} from './../../../../services/expense.service';\nimport {\n  ToasterService\n} from './../../../../services/toaster.service';\n\nimport {\n  ExpenseModel\n} from './../../../../models/expense.model';\n\n@Component({\n  selector: 'app-edit-expense',\n  templateUrl: './edit-expense.component.html',\n  styleUrls: ['./edit-expense.component.scss'],\n})\nexport class EditExpenseComponent implements OnInit {\n\n  expense: ExpenseModel;\n\n  date: string;\n\n  constructor(private popoverController: PopoverController,\n    private expensesService: ExpenseService,\n    private toasterService: ToasterService) {}\n\n  ngOnInit() {\n    this.date = new Date(this.expense.date.year, this.expense.date.month - 1, this.expense.date.date).toISOString();\n  }\n\n\n  onDismiss(): void {\n    this.popoverController.dismiss(null, 'cancel');\n  }\n\n  onSubmit(form: NgForm): void {\n\n    const selectedDate: Date = new Date(form.value.date);\n\n    const update: {\n      date: ExpenseModel['date'],\n      cost: number\n    } = {\n      date: {\n        date: selectedDate.getDate(),\n        month: selectedDate.getMonth() + 1,\n        year: selectedDate.getFullYear()\n      },\n      cost: form.value.cost\n    }\n\n    this.expensesService.updateExpense(this.expense._id, update).subscribe(\n      () => {\n        this.expense.cost = update.cost;\n        this.expense.date = update.date;\n        this.popoverController.dismiss(this.expense, 'edit');\n      }, (error: string) => {\n        this.toasterService.presentToast('Failure!!', error, 2000, 'danger');\n      }\n    );\n\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0LWV4cGVuc2UuY29tcG9uZW50LnNjc3MifQ== */\";","import {\n  Component,\n  Input\n} from '@angular/core';\nimport {\n  NgForm\n} from '@angular/forms';\nimport {\n  PopoverController\n} from '@ionic/angular';\nimport {\n  take\n} from 'rxjs/operators';\n\n// services\nimport {\n  ExpenseService\n} from '../../../../services/expense.service';\nimport {\n  ToasterService\n} from './../../../../services/toaster.service';\n\n// models\nimport {\n  SettingsModel\n} from './../../../../models/settings.model';\nimport {\n  ExpenseModel\n} from './../../../../models/expense.model';\n\n@Component({\n  selector: 'app-add-expense',\n  templateUrl: './add-expense.component.html',\n  styleUrls: ['./add-expense.component.scss'],\n})\nexport class AddExpenseComponent {\n\n  @Input() expenses: SettingsModel['expenses'] = [];\n  @Input() gid: string;\n\n  todaysDate: string = new Date().toISOString();\n\n  constructor(private popoverController: PopoverController,\n    private expenseService: ExpenseService,\n    private toasterService: ToasterService) {}\n\n  onDismiss(): void {\n    this.popoverController.dismiss(null, 'cancel');\n  }\n\n  onSubmit(form: NgForm): void {\n\n    const selectedDate: Date = new Date(form.value.date);\n\n    const expense: ExpenseModel = {\n      name: form.value.expense.name,\n      units: form.value.units > 0 ? form.value.units : 1,\n      cost: form.value.cost,\n      gid: this.gid,\n      pid: form.value.expense.id,\n      date: {\n        date: selectedDate.getDate(),\n        month: selectedDate.getMonth() + 1,\n        year: selectedDate.getFullYear()\n      }\n    };\n\n    this.expenseService.addExpense(expense).pipe(take(1)).subscribe((result: {\n      expense: ExpenseModel\n    }) => {\n      this.popoverController.dismiss(result.expense, 'create');\n    }, (error: string) => {\n      this.toasterService.presentToast('Failure!!', error, 200, 'danger');\n    });\n\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title class=\\\"ion-padding-top\\\">\\n      Expenses\\n      <ion-label *ngIf=\\\"currentGroup?.name\\\"><small>({{currentGroup?.name|titlecase}})</small></ion-label>\\n    </ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"presentCategoryPopover()\\\">\\n        <ion-icon name=\\\"filter-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-grid>\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-col size=\\\"12\\\" size-sm=\\\"10\\\" size-md=\\\"8\\\" size-lg=\\\"6\\\" size-xl=\\\"4\\\"\\n          class=\\\"ion-margin-start ion-margin-end ion-no-padding\\\">\\n          <ion-searchbar color=\\\"light\\\" showCancelButton=\\\"focus\\\" [(ngModel)]=\\\"searchString\\\" #searchStr\\n            (ionInput)=\\\"filterProductExpenses(searchStr.value)\\\">\\n          </ion-searchbar>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button (click)=\\\"presentViewFilterPopover()\\\">\\n        <ion-icon name=\\\"funnel-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col size=\\\"12\\\" size-sm=\\\"10\\\" size-md=\\\"8\\\" class=\\\"ion-text-center\\\">\\n        <ion-toolbar size=\\\"12\\\" class=\\\"ion-text-center\\\" style=\\\"background-color: #1f1f1f;\\\">\\n          <ion-datetime [value]=\\\"selectedDate\\\" [displayFormat]=\\\"viewFilter==='date'? 'MMMM YYYY' : 'YYYY'\\\"\\n            (ionChange)=\\\"updateSelectMonth($event)\\\" style=\\\"width: 100%; padding-left: 50px;\\\"></ion-datetime>\\n\\n            <ion-buttons slot=\\\"primary\\\">\\n            <ion-button (click)=\\\"presentAddExpensePopover()\\\">\\n              <ion-icon name=\\\"add-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n            </ion-button>\\n          </ion-buttons>\\n        </ion-toolbar>\\n\\n        <ion-list style=\\\"background-color: rgb(40, 41, 44);\\\">\\n          <ion-card>\\n            <ion-item style=\\\"font-size: 0.9rem;\\\">\\n              <ion-label color=\\\"primary\\\">Total Expenditure</ion-label>\\n              <ion-text color=\\\"success\\\">{{total}} /-</ion-text>\\n            </ion-item>\\n          </ion-card>\\n          <ion-card *ngFor=\\\"let date of expenseDates\\\">\\n            <ion-card-header>\\n              <ion-card-subtitle>\\n                {{months[date.month-1] | titlecase}}<span *ngIf=\\\"viewFilter==='date'\\\">, {{date.date}}</span>\\n              </ion-card-subtitle>\\n            </ion-card-header>\\n            <ion-item style=\\\"font-size: 0.9rem;\\\">\\n              <ion-label color=\\\"primary\\\">Product(s)</ion-label>\\n              <ion-text color=\\\"primary\\\">Units | Cost</ion-text>\\n            </ion-item>\\n            <ion-item *ngFor=\\\"let expense of expenses[date[viewFilter]]\\\">\\n              <ion-label><small>{{expense?.name | titlecase}} <span *ngIf=\\\"expense?.brand\\\">\\n                    {{\\\"(\\\" + expense?.brand + \\\")\\\" | titlecase }}</span></small></ion-label>\\n              <ion-text><small>{{expense?.units}} | {{expense?.cost}}</small></ion-text>\\n              <ion-button fill=\\\"clear\\\" (click)=\\\"presentExpenseActionSheet(expense)\\\" class=\\\"ion-no-padding\\\">\\n                <ion-icon name=\\\"ellipsis-vertical\\\" color=\\\"dark\\\"></ion-icon>\\n              </ion-button>\\n            </ion-item>\\n\\n            <ion-item style=\\\"font-size: 0.9rem;\\\">\\n              <ion-label color=\\\"warning\\\">Total</ion-label>\\n              <ion-text>{{expensesDateTotal[date[viewFilter]]}} /-</ion-text>\\n            </ion-item>\\n          </ion-card>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export default \"<ion-header>\\n  <ion-toolbar class=\\\"ion-text-center\\\">\\n    <ion-title>Add Expense</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-no-padding\\\">\\n\\n  <form #createExpenseForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(createExpenseForm)\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Date</ion-label>\\n      <ion-datetime type=\\\"date\\\" [ngModel]=\\\"todaysDate\\\" name=\\\"date\\\" required></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Expense</ion-label>\\n      <ion-select ngModel name=\\\"expense\\\" required>\\n        <ion-select-option [value]=\\\"expense\\\" *ngFor=\\\"let expense of expenses\\\">{{expense?.name | titlecase}}\\n        </ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Units</ion-label>\\n      <ion-input type=\\\"number\\\" ngModel=\\\"1\\\" name=\\\"units\\\" min=\\\"1\\\" required></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Total Cost</ion-label>\\n      <ion-input type=\\\"number\\\" ngModel name=\\\"cost\\\" required></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-button fill=\\\"clear\\\" (click)=\\\"onDismiss()\\\">Cancel</ion-button>\\n        <ion-button type=\\\"submit\\\" fill=\\\"clear\\\" [disabled]=\\\"createExpenseForm.invalid\\\">Add Expense</ion-button>\\n      </ion-row>\\n    </ion-item>\\n  </form>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}